# Copyright 2020 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

appName = third-party-application

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform backend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.MicroserviceFilters"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"

# Define additional modules used here
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.thirdpartyapplication.config.ConfigurationModule"
play.modules.enabled += "uk.gov.hmrc.thirdpartyapplication.config.SchedulerModule"
play.modules.enabled += "uk.gov.hmrc.thirdpartyapplication.config.ApiStorageModule"
play.modules.enabled += "uk.gov.hmrc.thirdpartyapplication.config.DropSandboxIndexModule"
play.modules.enabled += "uk.gov.hmrc.thirdpartyapplication.metrics.MetricsModule"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret = "3kXCHYnjCIvNeJa6KHrpNy6z8tLGqTtMMls0V5ypVihNd3irhDk47ctKmGXluPlz"

# Session configuration
# ~~~~~
application.session.httpOnly = false

application.session.secure = false

# The application languages
# ~~~~~
application.langs = "en"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router = prod.Routes

# Cache Control
fetchApplicationTtlInSeconds = 300
fetchSubscriptionTtlInSeconds = 300

canDeleteApplications = false

# Feature Flags
# ~~~~~
# Flag here control the way the application works.
# Once a flag is no longer needed it should be remove from the application.

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  },
  controllers.ApplicationController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }
}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

mongo-async-driver {
  akka {
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    loglevel = WARNING
    log-dead-letters-during-shutdown = off
  }
}

# Microservice specific config
clientSecretLimit = 5
upliftVerificationValidity = 90d
unusedApplicationsDeletionCutoff = 365d
unusedApplicationsDeletionDryRun = true

# Entry is required for testing purposes, it's overridden when deployed
awsApiKey = fake-api-key

roles {
  super-user = "super-user-role"
  user = "user-role"
  admin = "admin-role"
}

applicationNameBlackList = ["HMRC", "HM Revenue & Customs", "HM Revenue and Customs"]
validateForDuplicateAppNames = true

Dev {
  skipWso2 = true
  devHubBaseUrl = "http://localhost:9685"

  mongodb {
    uri = "mongodb://localhost:27017/third-party-application?rm.monitorRefreshMS=4000&rm.failover=default"
  }

  upliftVerificationExpiryJob {
    initialDelay = 60s
    interval = 6h
    enabled = true
  }

  refreshSubscriptionsJob {
    initialDelay = 120s
    interval = 60m
    enabled = true
  }

  auditing {
    enabled = true
    traceRequests = false
    consumer {
      baseUri {
        host = localhost
        port = 8100
      }
    }
  }

  microservice {
    metrics {
      graphite {
        host = graphite
        port = 2003
        prefix = play.${appName}.
        enabled = false
      }
    }

    services {
      timeout = 5 seconds

      delay-response = 2 seconds

      protocol = http

      api-definition {
        host = localhost
        port = 9604
      }

      api-subscription-fields {
        host = localhost
        port = 9650
      }

      wso2-store {
        protocol = http
        host = localhost
        port = 9763
        username = admin
      }

      email {
        host = localhost
        port = 8300
      }

      third-party-developer {
        host = localhost
        port = 9615
      }

      auth {
        host = localhost
        port = 8500
      }

      totp {
        host = localhost
        port = 9988
      }

      third-party-delegated-authority {
        protocol = https
        host = localhost
        port = 9606
      }

      aws-gateway {
        host = localhost
        port = 9607
      }
    }
  }
}

Test {
  skipWso2 = true
  devHubBaseUrl = "http://localhost:9685"

  mongodb {
    uri = "mongodb://localhost:27017/third-party-application-test?rm.monitorRefreshMS=4000&rm.failover=default"
  }

  upliftVerificationExpiryJob {
    initialDelay = 60s
    interval = 6h
    enabled = true
  }

  auditing {
    enabled = false
    traceRequests = false
  }

  microservice {
    metrics {
      graphite {
        host = graphite
        port = 2003
        prefix = play.${appName}.
        enabled = false
      }
    }

    services {
      timeout = 5 seconds

      delay-response = 2 seconds

      protocol = http

      api-definition {
        host = localhost
        port = 22221
      }

      api-subscription-fields {
        host = localhost
        port = 22227
      }

      wso2-store {
        protocol = http
        host = localhost
        port = 22222
        username = admin
      }

      email {
        host = localhost
        port = 22223
      }

      third-party-developer {
        host = localhost
        port = 22224
      }

      auth {
        host = localhost
        port = 22225
      }

      totp {
        host = localhost
        port = 22226
      }

      third-party-delegated-authority {
        host = localhost
        port = 22228
      }

      aws-gateway {
        host = localhost
        port = 22229
      }
    }
  }
}

Prod { }
