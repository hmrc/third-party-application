# microservice specific routes

GET           /developer/applications                                uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.queryDispatcher()
POST          /collaborators                                         uk.gov.hmrc.thirdpartyapplication.controllers.CollaboratorController.searchCollaborators()

GET           /applications                                          uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.searchApplications()

GET           /application                                           uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.queryDispatcher()
GET           /application/subscriptions                             uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.fetchAllAPISubscriptions()

GET           /application/:id                                       uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.fetch(id: ApplicationId)
POST          /application                                           uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.create()
PATCH         /application/:id                                       uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationCommandController.update(id: ApplicationId)
PATCH         /application/:id/dispatch                              uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationCommandController.dispatch(id: ApplicationId)

GET           /application/:id/access/scopes                         uk.gov.hmrc.thirdpartyapplication.controllers.AccessController.readScopes(id: ApplicationId)
GET           /application/:id/access/overrides                      uk.gov.hmrc.thirdpartyapplication.controllers.AccessController.readOverrides(id: ApplicationId)

GET           /application/:id/credentials                           uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.fetchCredentials(id: ApplicationId)
POST          /application/credentials/validate                      uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.validateCredentials()
POST          /application/name/validate                             uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.validateApplicationName()

PUT           /application/:id/collaborator                          uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.fixCollaborator(id: ApplicationId)

GET           /application/:id/subscription                          uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.fetchAllSubscriptions(id: ApplicationId)
GET           /application/:id/subscription/:context/:version        uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.isSubscribed(id: ApplicationId, context: ApiContext, version: ApiVersionNbr)

POST          /application/:id/delete                                uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.deleteApplication(id: ApplicationId)

POST          /verify-uplift/:code                                   uk.gov.hmrc.apiplatform.modules.uplift.controllers.UpliftController.verifyUplift(code: String)

# Gatekeeper ONLY routes
GET           /gatekeeper/applications                               uk.gov.hmrc.thirdpartyapplication.controllers.GatekeeperController.fetchAppsForGatekeeper()
GET           /gatekeeper/application/:id                            uk.gov.hmrc.thirdpartyapplication.controllers.GatekeeperController.fetchAppById(id: ApplicationId)
GET           /gatekeeper/application/:id/stateHistory               uk.gov.hmrc.thirdpartyapplication.controllers.GatekeeperController.fetchAppStateHistoryById(id: ApplicationId)
GET           /gatekeeper/applications/stateHistory                  uk.gov.hmrc.thirdpartyapplication.controllers.GatekeeperController.fetchAppStateHistories()
GET           /gatekeeper/applications/subscriptions                 uk.gov.hmrc.thirdpartyapplication.controllers.GatekeeperController.fetchAllAppsWithSubscriptions()
GET           /gatekeeper/developer/:userId/applications             uk.gov.hmrc.thirdpartyapplication.controllers.GatekeeperController.fetchAllForCollaborator(userId: UserId)
POST          /gatekeeper/application/:id/delete                     uk.gov.hmrc.thirdpartyapplication.controllers.GatekeeperController.deleteApplication(id: ApplicationId)

POST          /application/:id/check-information                     uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.updateCheck(id: ApplicationId)

GET           /apis/*context/versions/:version/subscribers           uk.gov.hmrc.thirdpartyapplication.controllers.SubscriptionController.getSubscribers(context: ApiContext, version: ApiVersionNbr)
DELETE        /apis/*context/versions/:version/subscribers           uk.gov.hmrc.thirdpartyapplication.controllers.PublisherController.deleteSubscribers(context: ApiContext, version: ApiVersionNbr)
GET           /developer/:developerId/subscriptions                  uk.gov.hmrc.thirdpartyapplication.controllers.SubscriptionController.getSubscriptionsForDeveloper(developerId: UserId)
GET           /developer/:userId/applications                        uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.fetchAllForCollaborator(userId: UserId)
POST          /developer/applications                                uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.fetchAllForCollaborators()

POST          /admin/application/restore-aws-data                    uk.gov.hmrc.thirdpartyapplication.controllers.AwsRestoreController.restoreAwsData()

GET           /application/:id/linked-subordinate-id                 uk.gov.hmrc.apiplatform.modules.upliftlinks.controllers.UpliftLinksController.getSandboxAppIdForProductionApp(id: ApplicationId)

POST          /application/:id/confirm-setup-complete                uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.confirmSetupComplete(id: ApplicationId)

GET /query uk.gov.hmrc.thirdpartyapplication.controllers.query.QueryController.queryDispatcher()