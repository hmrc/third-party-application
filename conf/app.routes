# microservice specific routes

GET           /developer/applications                                uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.queryDispatcher()

GET           /applications                                          uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.searchApplications

GET           /application                                           uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.queryDispatcher()
GET           /application/wso2-credentials                          uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.fetchWso2Credentials(clientId: String)
GET           /application/subscriptions                             uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.fetchAllAPISubscriptions()

GET           /application/:id                                       uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.fetch(id: java.util.UUID)
POST          /application                                           uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.create
POST          /application/:id                                       uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.update(id: java.util.UUID)

GET           /application/:id/access/scopes                         uk.gov.hmrc.thirdpartyapplication.controllers.AccessController.readScopes(id: java.util.UUID)
PUT           /application/:id/access/scopes                         uk.gov.hmrc.thirdpartyapplication.controllers.AccessController.updateScopes(id: java.util.UUID)

GET           /application/:id/access/overrides                      uk.gov.hmrc.thirdpartyapplication.controllers.AccessController.readOverrides(id: java.util.UUID)
PUT           /application/:id/access/overrides                      uk.gov.hmrc.thirdpartyapplication.controllers.AccessController.updateOverrides(id: java.util.UUID)

GET           /application/:id/credentials                           uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.fetchCredentials(id: java.util.UUID)
POST          /application/credentials/validate                      uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.validateCredentials

POST          /application/:id/collaborator                          uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.addCollaborator(id: java.util.UUID)
DELETE        /application/:id/collaborator/:email                   uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.deleteCollaborator(id: java.util.UUID, email: String, admin: String, adminsToEmail: String)

GET           /application/:id/subscription                          uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.fetchAllSubscriptions(id: java.util.UUID)
GET           /application/:id/subscription/:context/:version        uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.isSubscribed(id: java.util.UUID, context: String, version: String)
POST          /application/:id/subscription                          uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.createSubscriptionForApplication(id: java.util.UUID)
DELETE        /application/:id/subscription                          uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.removeSubscriptionForApplication(id: java.util.UUID, context, version)


POST          /application/:id/client-secret                         uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.addClientSecret(id: java.util.UUID)
POST          /application/:id/revoke-client-secrets                 uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.deleteClientSecrets(id: java.util.UUID)

POST          /application/:id/request-uplift                        uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.requestUplift(id: java.util.UUID)
POST          /application/:id/approve-uplift                        uk.gov.hmrc.thirdpartyapplication.controllers.GatekeeperController.approveUplift(id: java.util.UUID)
POST          /application/:id/reject-uplift                         uk.gov.hmrc.thirdpartyapplication.controllers.GatekeeperController.rejectUplift(id: java.util.UUID)
POST          /application/:id/resend-verification                   uk.gov.hmrc.thirdpartyapplication.controllers.GatekeeperController.resendVerification(id: java.util.UUID)
POST          /application/:id/delete                                uk.gov.hmrc.thirdpartyapplication.controllers.GatekeeperController.deleteApplication(id: java.util.UUID)
POST          /application/:id/block                                 uk.gov.hmrc.thirdpartyapplication.controllers.GatekeeperController.blockApplication(id: java.util.UUID)
POST          /application/:id/unblock                               uk.gov.hmrc.thirdpartyapplication.controllers.GatekeeperController.unblockApplication(id: java.util.UUID)

POST          /application/:id/rate-limit-tier                       uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.updateRateLimitTier(id: java.util.UUID)

POST          /verify-uplift/:code                                   uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.verifyUplift(code: String)

GET           /gatekeeper/applications                               uk.gov.hmrc.thirdpartyapplication.controllers.GatekeeperController.fetchAppsForGatekeeper
GET           /gatekeeper/application/:id                            uk.gov.hmrc.thirdpartyapplication.controllers.GatekeeperController.fetchAppById(id: java.util.UUID)

POST          /application/:id/check-information                     uk.gov.hmrc.thirdpartyapplication.controllers.ApplicationController.updateCheck(id: java.util.UUID)

POST          /admin/application/restore-wso2-data                   uk.gov.hmrc.thirdpartyapplication.controllers.Wso2RestoreController.restoreWso2Data()
